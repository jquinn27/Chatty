[{"C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\index.js":"1","C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\App.js":"2","C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\pages\\Register.jsx":"3","C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\pages\\Chat.jsx":"4","C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\pages\\Login.jsx":"5","C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\utils\\APIRoutes.js":"6","C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\pages\\SetAvatar.jsx":"7","C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\components\\Contacts.jsx":"8","C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\components\\Welcome.jsx":"9","C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\components\\ChatContainer.jsx":"10","C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\components\\Logout.jsx":"11","C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\components\\ChatInput.jsx":"12","C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\components\\Messages.jsx":"13"},{"size":257,"mtime":1655156949768,"results":"14","hashOfConfig":"15"},{"size":579,"mtime":1656042444705,"results":"16","hashOfConfig":"15"},{"size":5910,"mtime":1655866233957,"results":"17","hashOfConfig":"15"},{"size":2630,"mtime":1656216473530,"results":"18","hashOfConfig":"15"},{"size":4618,"mtime":1655780883756,"results":"19","hashOfConfig":"15"},{"size":463,"mtime":1656214915100,"results":"20","hashOfConfig":"15"},{"size":5629,"mtime":1655864100640,"results":"21","hashOfConfig":"15"},{"size":3910,"mtime":1655865275008,"results":"22","hashOfConfig":"15"},{"size":894,"mtime":1656040466708,"results":"23","hashOfConfig":"15"},{"size":4318,"mtime":1656217254022,"results":"24","hashOfConfig":"15"},{"size":843,"mtime":1656211120667,"results":"25","hashOfConfig":"15"},{"size":3934,"mtime":1656216097414,"results":"26","hashOfConfig":"15"},{"size":223,"mtime":1656200368561,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1iis04b",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\index.js",[],[],[],"C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\App.js",[],[],"C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\pages\\Register.jsx",["70","71","72"],[],"import React, {useState, useEffect} from 'react'\r\nimport styled from \"styled-components\"\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport Logo from \"../assets/logo.svg\"\r\nimport {ToastContainer, toast} from 'react-toastify'\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\nimport axios from \"axios\"\r\nimport { registerRoute, validateUser } from '../utils/APIRoutes';\r\n\r\n\r\nfunction Register() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [values, setValues]=useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n    });\r\n\r\n    const handleSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        if(handleValidation()){\r\n          //valid. calls API\r\n          const { password, email, username } = values;\r\n          const {data} = await axios.post(registerRoute,{\r\n            username,\r\n            email,\r\n            password\r\n          });\r\n          if(data.status===false){\r\n            toast.error(data.msg, toastOptions)\r\n          }\r\n          if(data.status===true){\r\n            localStorage.setItem('chat-app-user', JSON.stringify(data.user));\r\n            navigate(\"/\");\r\n          }\r\n          \r\n        }\r\n    }\r\n\r\n    \r\n    useEffect(() =>{\r\n      async function userValid(){\r\n        let localUser = JSON.parse(localStorage.getItem(\"chat-app-user\"))\r\n      \r\n        if(localUser){\r\n          const {data} = await axios.post(validateUser,{\r\n            _id: localUser._id\r\n          })\r\n          if(data.status===false){\r\n            localStorage.removeItem(\"chat-app-user\")\r\n            return\r\n          }\r\n          if(data.status===true){\r\n            navigate(\"/\")\r\n          }\r\n        }\r\n\r\n        if(!localUser){\r\n          return\r\n        }\r\n\r\n      \r\n      }\r\n      userValid()\r\n    }, [])\r\n\r\n\r\n    \r\n    const toastOptions = {\r\n      \r\n        position: 'bottom-right',\r\n        autoClose: 8000,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        theme: 'dark'\r\n    \r\n    }\r\n\r\n    var emailRegex = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\r\n\r\n    function isEmailValid(email) {\r\n        if (!email)\r\n            return false;\r\n\r\n        if(email.length>254)\r\n            return false;\r\n\r\n        var valid = emailRegex.test(email);\r\n        if(!valid)\r\n            return false;\r\n\r\n        // Further checking of some things regex can't handle\r\n        var parts = email.split(\"@\");\r\n        if(parts[0].length>64)\r\n            return false;\r\n\r\n        var domainParts = parts[1].split(\".\");\r\n        if(domainParts.some(function(part) { return part.length>63; }))\r\n            return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleValidation = () =>{\r\n        const {username, email, password, confirmPassword} = values;\r\n\r\n        if(password !==confirmPassword){\r\n            toast.error(\"Password and confirm password should match.\", toastOptions)\r\n            return false;\r\n        } else if(username.length<3){\r\n          toast.error(\"Username must be longer than 3 characters.\", toastOptions)\r\n          return false;\r\n        }\r\n        else if(password.length<8){\r\n          toast.error(\"Password must be longer than 8 characters.\", toastOptions)\r\n          return false;\r\n        } else if(isEmailValid(email) !== true){\r\n          toast.error(\"Email must be valid.\", toastOptions)\r\n          return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleChange = (event) =>{\r\n        setValues({...values, [event.target.name]:event.target.value});\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <FormContainer>\r\n        <form action =\"\" onSubmit={(event) => handleSubmit(event)}>\r\n            <div className=\"brand\">\r\n                <img src={Logo} alt=\"Logo\"/>\r\n                <h1>Chatty</h1>\r\n            </div>\r\n            <input type=\"text\" placeholder='Username' name='username' onChange={e=>handleChange(e)}/>\r\n            <input type=\"email\" placeholder='Email' name='email' onChange={e=>handleChange(e)}/>\r\n            <input type=\"password\" placeholder='Password' name='password' onChange={e=>handleChange(e)}/>\r\n            <input type=\"password\" placeholder='Confirm Password' name='confirmPassword' onChange={e=>handleChange(e)}/>\r\n            <button type='submit'>Create User</button>\r\n            <span>Already have an account? <Link to=\"/login\">Login</Link></span>\r\n        </form>\r\n    </FormContainer>\r\n    <ToastContainer/>\r\n    </>\r\n  )\r\n}\r\n\r\nconst FormContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  background-color: #131324;\r\n  .brand {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    justify-content: center;\r\n    img {\r\n      height: 5rem;\r\n    }\r\n    h1 {\r\n      color: white;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    background-color: #00000076;\r\n    border-radius: 2rem;\r\n    padding: 3rem 5rem;\r\n  }\r\n  input {\r\n    background-color: transparent;\r\n    padding: 1rem;\r\n    border: 0.1rem solid #4e0eff;\r\n    border-radius: 0.4rem;\r\n    color: white;\r\n    width: 100%;\r\n    font-size: 1rem;\r\n    &:focus {\r\n      border: 0.1rem solid #997af0;\r\n      outline: none;\r\n    }\r\n  }\r\n  button {\r\n    background-color: #4e0eff;\r\n    color: white;\r\n    padding: 1rem 2rem;\r\n    border: none;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    border-radius: 0.4rem;\r\n    font-size: 1rem;\r\n    text-transform: uppercase;\r\n    &:hover {\r\n      background-color: #997af0;\r\n    }\r\n  }\r\n  span {\r\n    color: white;\r\n    text-transform: uppercase;\r\n    a {\r\n      color: #4e0eff;\r\n      text-decoration: none;\r\n      font-weight: bold;\r\n      &:hover{\r\n          color: #997af0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Register","C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\pages\\Chat.jsx",["73","74"],[],"C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\pages\\Login.jsx",["75"],[],"import React, {useState, useEffect} from 'react'\r\nimport styled from \"styled-components\"\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport Logo from \"../assets/logo.svg\"\r\nimport {ToastContainer, toast} from 'react-toastify'\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\nimport axios from \"axios\"\r\nimport { loginRoute, validateUser } from '../utils/APIRoutes';\r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [values, setValues]=useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const handleSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        if(handleValidation()){\r\n          //valid. calls API\r\n          const { password,  username } = values;\r\n          const {data} = await axios.post(loginRoute,{\r\n            username,\r\n            password\r\n          });\r\n          if(data.status===false){\r\n            toast.error(data.msg, toastOptions)\r\n          }\r\n          if(data.status===true){\r\n            localStorage.setItem('chat-app-user', JSON.stringify(data.user));\r\n            navigate(\"/\");\r\n          }\r\n          \r\n        }\r\n    }\r\n    \r\n    const toastOptions = {\r\n      \r\n        position: 'bottom-right',\r\n        autoClose: 8000,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        theme: 'dark'\r\n    \r\n    }\r\n\r\n    //fix this. someone could just make a \"chatt-app-user\"\r\n    useEffect(() =>{\r\n      async function userValid(){\r\n        let localUser = JSON.parse(localStorage.getItem(\"chat-app-user\"))\r\n      \r\n        if(localUser){\r\n          const {data} = await axios.post(validateUser,{\r\n            _id: localUser._id\r\n          })\r\n          if(data.status===false){\r\n            localStorage.removeItem(\"chat-app-user\")\r\n            return\r\n          }\r\n          if(data.status===true){\r\n            navigate(\"/\");\r\n          }\r\n        }\r\n\r\n        if(!localUser){\r\n          return\r\n        }\r\n\r\n      \r\n      }\r\n      userValid()\r\n    }, [])\r\n\r\n\r\n    const handleValidation = () =>{\r\n        const {username,  password} = values;\r\n\r\n       \r\n        if(username.length<3){\r\n          toast.error(\"Username must be longer than 3 characters.\", toastOptions)\r\n          return false;\r\n        }\r\n        else if(password.length<8){\r\n          toast.error(\"Password must be longer than 8 characters.\", toastOptions)\r\n          return false;\r\n        } \r\n        \r\n        return true;\r\n    }\r\n\r\n    const handleChange = (event) =>{\r\n        setValues({...values, [event.target.name]:event.target.value});\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <FormContainer>\r\n        <form action =\"\" onSubmit={(event) => handleSubmit(event)}>\r\n            <div className=\"brand\">\r\n                <img src={Logo} alt=\"Logo\"/>\r\n                <h1>Chatty</h1>\r\n            </div>\r\n            <input type=\"text\" placeholder='Username' name='username' onChange={e=>handleChange(e)}/>\r\n            <input type=\"password\" placeholder='Password' name='password' onChange={e=>handleChange(e)}/>\r\n            <button type='submit'>Login</button>\r\n            <span>Don't have an account? <Link to=\"/register\">Register</Link></span>\r\n        </form>\r\n    </FormContainer>\r\n    <ToastContainer/>\r\n    </>\r\n  )\r\n}\r\n\r\nconst FormContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  background-color: #131324;\r\n  .brand {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    justify-content: center;\r\n    img {\r\n      height: 5rem;\r\n    }\r\n    h1 {\r\n      color: white;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    background-color: #00000076;\r\n    border-radius: 2rem;\r\n    padding: 3rem 5rem;\r\n  }\r\n  input {\r\n    background-color: transparent;\r\n    padding: 1rem;\r\n    border: 0.1rem solid #4e0eff;\r\n    border-radius: 0.4rem;\r\n    color: white;\r\n    width: 100%;\r\n    font-size: 1rem;\r\n    &:focus {\r\n      border: 0.1rem solid #997af0;\r\n      outline: none;\r\n    }\r\n  }\r\n  button {\r\n    background-color: #4e0eff;\r\n    color: white;\r\n    padding: 1rem 2rem;\r\n    border: none;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    border-radius: 0.4rem;\r\n    font-size: 1rem;\r\n    text-transform: uppercase;\r\n    &:hover {\r\n      background-color: #997af0;\r\n    }\r\n  }\r\n  span {\r\n    color: white;\r\n    text-transform: uppercase;\r\n    a {\r\n      color: #4e0eff;\r\n      text-decoration: none;\r\n      font-weight: bold;\r\n      &:hover{\r\n          color: #997af0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Login","C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\utils\\APIRoutes.js",[],[],"C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\pages\\SetAvatar.jsx",[],[],"C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\components\\Contacts.jsx",[],[],"C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\components\\Welcome.jsx",[],[],"C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\components\\ChatContainer.jsx",["76"],[],"C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\components\\Logout.jsx",["77"],[],"C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\components\\ChatInput.jsx",[],[],"C:\\Users\\jq01\\Desktop\\PortfolioProjects\\Chatty\\public\\chatty\\src\\components\\Messages.jsx",[],[],{"ruleId":"78","severity":1,"message":"79","line":68,"column":8,"nodeType":"80","endLine":68,"endColumn":10,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":82,"column":34,"nodeType":"84","messageId":"85","endLine":82,"endColumn":35,"suggestions":"86"},{"ruleId":"82","severity":1,"message":"83","line":82,"column":68,"nodeType":"84","messageId":"85","endLine":82,"endColumn":69,"suggestions":"87"},{"ruleId":"78","severity":1,"message":"79","line":46,"column":6,"nodeType":"80","endLine":46,"endColumn":8,"suggestions":"88"},{"ruleId":"78","severity":1,"message":"79","line":62,"column":5,"nodeType":"80","endLine":62,"endColumn":18,"suggestions":"89"},{"ruleId":"78","severity":1,"message":"79","line":76,"column":8,"nodeType":"80","endLine":76,"endColumn":10,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":16},{"ruleId":"91","severity":1,"message":"95","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":13},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["96"],"no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["97","98"],["99","100"],["101"],["102"],["103"],"no-unused-vars","'Messages' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.",{"desc":"104","fix":"105"},{"messageId":"106","fix":"107","desc":"108"},{"messageId":"109","fix":"110","desc":"111"},{"messageId":"106","fix":"112","desc":"108"},{"messageId":"109","fix":"113","desc":"111"},{"desc":"104","fix":"114"},{"desc":"115","fix":"116"},{"desc":"104","fix":"117"},"Update the dependencies array to be: [navigate]",{"range":"118","text":"119"},"removeEscape",{"range":"120","text":"121"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"122","text":"123"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"124","text":"121"},{"range":"125","text":"123"},{"range":"126","text":"119"},"Update the dependencies array to be: [currentUser, navigate]",{"range":"127","text":"128"},{"range":"129","text":"119"},[1799,1801],"[navigate]",[2037,2038],"",[2037,2037],"\\",[2071,2072],[2071,2071],[1307,1309],[1661,1674],"[currentUser, navigate]",[1966,1968]]