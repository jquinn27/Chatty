{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jq01\\\\Desktop\\\\PortfolioProjects\\\\Chatty\\\\public\\\\chatty\\\\src\\\\pages\\\\SetAvatar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport loader from \"../assets/loader.gif\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport { setAvatarRoute, validateUser } from \"../utils/APIRoutes\";\nimport { Buffer } from \"buffer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SetAvatar() {\n  _s();\n\n  const api = \"https://api.multiavatar.com/45678945\";\n  const navigate = useNavigate();\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n  const toastOptions = {\n    position: 'bottom-right',\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: 'dark'\n  };\n  useEffect(() => {\n    async function userValid() {\n      let localUser = JSON.parse(localStorage.getItem(\"chat-app-user\"));\n\n      if (localUser) {\n        const {\n          data\n        } = await axios.post(validateUser, {\n          _id: localUser._id\n        });\n\n        if (data.status === false) {\n          localStorage.removeItem(\"chat-app-user\");\n          navigate(\"/login\");\n          return;\n        }\n\n        if (data.status === true) {\n          return;\n        }\n      }\n\n      if (!localUser) {\n        navigate(\"/login\");\n        return;\n      }\n    }\n\n    userValid();\n  });\n\n  const setProfilePicture = async () => {\n    if (selectedAvatar === undefined) {\n      toast.error(\"Please select an avatar\", toastOptions);\n    } else {\n      const user = await JSON.parse(localStorage.getItem(\"chat-app-user\"));\n      const {\n        data\n      } = await axios.post(`${setAvatarRoute}/${user._id}`, {\n        image: avatars[selectedAvatar]\n      });\n\n      if (data.isSet === true) {\n        user.isAvatarImageSet = true;\n        user.avatarImage = data.image;\n        localStorage.setItem(\"chat-app-user\", JSON.stringify(user));\n        navigate('/');\n      } else {\n        toast.error(\"Error setting avatar. Please try again\", toastOptions);\n      }\n    }\n  };\n\n  useEffect(() => {\n    async function fetchMyApi() {\n      const data = [];\n\n      for (let i = 0; i < 4; i++) {\n        const image = await axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\n        const buffer = new Buffer(image.data);\n        data.push(buffer.toString(\"base64\"));\n      }\n\n      setAvatars(data);\n      setIsLoading(false);\n    }\n\n    fetchMyApi();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: loader,\n        alt: \"Loader\",\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"loading-text\",\n        children: \"Loading, please wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pick an avatar as your profile picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatars\",\n        children: avatars.map((avatar, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `avatar ${selectedAvatar === index ? \"selected\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${avatar}`,\n              alt: \"avatar\",\n              onClick: () => setSelectedAvatar(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        onClick: setProfilePicture,\n        children: \"Set as Profile Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SetAvatar, \"BeAPsJ8wCQQyE5ntbVx5JvwfYEY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SetAvatar;\nconst Container = styled.div`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    flex-direction:column;\n    gap:3rem;\n    background-color:#131324;\n    height: 100vh;\n    width:100vw;\n    .loading-text {\n        color: white;\n    }\n    .loader {\n        max-inline-size: 100%;\n    }\n\n    .title-container{\n        h1{\n            color: white;\n        }\n    }\n\n    .avatars{\n        display: flex;\n        gap: 2rem;\n        .avatar{\n            border: 0.4rem solid transparent;\n            padding: 0.4rem;\n            border-radius: 5rem;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            transition: 0.2s ease-in-out ;\n            img{\n                height: 6rem;\n                cursor: pointer;\n            }\n            \n        }\n        .selected{\n            border: 0.4rem solid #4e0eff;\n        }\n    }\n    .submit-btn {\n        background-color: #4e0eff;\n        color: white;\n        padding: 1rem 2rem;\n        border: none;\n        font-weight: bold;\n        cursor: pointer;\n        border-radius: 0.4rem;\n        font-size: 1rem;\n        text-transform: uppercase;\n        &:hover {\n          background-color: #997af0;\n        }\n      }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SetAvatar\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","styled","loader","useNavigate","ToastContainer","toast","axios","setAvatarRoute","validateUser","Buffer","SetAvatar","api","navigate","avatars","setAvatars","isLoading","setIsLoading","selectedAvatar","setSelectedAvatar","undefined","toastOptions","position","autoClose","pauseOnHover","draggable","theme","userValid","localUser","JSON","parse","localStorage","getItem","data","post","_id","status","removeItem","setProfilePicture","error","user","image","isSet","isAvatarImageSet","avatarImage","setItem","stringify","fetchMyApi","i","get","Math","round","random","buffer","push","toString","map","avatar","index","Container","div"],"sources":["C:/Users/jq01/Desktop/PortfolioProjects/Chatty/public/chatty/src/pages/SetAvatar.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport styled from \"styled-components\"\r\nimport loader from \"../assets/loader.gif\"\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {ToastContainer, toast} from 'react-toastify'\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\nimport axios from \"axios\"\r\nimport { setAvatarRoute, validateUser } from \"../utils/APIRoutes\"\r\nimport {Buffer} from \"buffer\"\r\n\r\nexport default function SetAvatar() {\r\n\r\n    const api = \"https://api.multiavatar.com/45678945\";\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [avatars, setAvatars] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [selectedAvatar, setSelectedAvatar] = useState(undefined)\r\n\r\n    const toastOptions = {\r\n      \r\n        position: 'bottom-right',\r\n        autoClose: 8000,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        theme: 'dark'\r\n    \r\n    }\r\n\r\n    useEffect(() =>{\r\n        async function userValid(){\r\n            let localUser = JSON.parse(localStorage.getItem(\"chat-app-user\"))\r\n          \r\n            if(localUser){\r\n              const {data} = await axios.post(validateUser,{\r\n                _id: localUser._id\r\n              })\r\n              if(data.status===false){\r\n                localStorage.removeItem(\"chat-app-user\")\r\n                navigate(\"/login\")\r\n                return\r\n              }\r\n              if(data.status===true){\r\n                return\r\n              }\r\n            }\r\n    \r\n            if(!localUser){\r\n              navigate(\"/login\")\r\n              return\r\n            }\r\n    \r\n          \r\n          }\r\n          userValid();\r\n    })\r\n\r\n    const setProfilePicture = async () =>{\r\n        if(selectedAvatar===undefined){\r\n            toast.error(\"Please select an avatar\", toastOptions);\r\n        }\r\n        else{\r\n            const user = await JSON.parse(localStorage.getItem(\"chat-app-user\"))\r\n            const { data } = await axios.post(`${setAvatarRoute}/${user._id}`, {\r\n                image:avatars[selectedAvatar]\r\n            })\r\n            \r\n            if(data.isSet === true){\r\n                user.isAvatarImageSet = true;\r\n                user.avatarImage = data.image;\r\n                localStorage.setItem(\"chat-app-user\", JSON.stringify(user))\r\n                navigate('/')\r\n            } else {\r\n                toast.error(\"Error setting avatar. Please try again\", toastOptions);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n\r\n        async function fetchMyApi(){\r\n            const data = [];\r\n        for (let i = 0; i < 4; i++) {\r\n          const image = await axios.get(\r\n            `${api}/${Math.round(Math.random() * 1000)}`\r\n          );\r\n          const buffer = new Buffer(image.data);\r\n          data.push(buffer.toString(\"base64\"));\r\n        }\r\n        setAvatars(data);\r\n        setIsLoading(false);\r\n        }\r\n\r\n        \r\n        fetchMyApi();\r\n      }, []);\r\n\r\n    return (\r\n        <>\r\n        {\r\n            isLoading ? <Container>\r\n                <img src={loader} alt=\"Loader\" className=\"loader\"/>\r\n                <h1 className='loading-text'>\r\n                    Loading, please wait...\r\n                </h1>\r\n            </Container> : (\r\n                <Container>\r\n\r\n                <div className=\"title-container\">\r\n                    <h1>\r\n                        Pick an avatar as your profile picture\r\n                    </h1>\r\n                </div>\r\n                <div className=\"avatars\">\r\n                    {\r\n                        avatars.map((avatar,index)=>{\r\n                            return(\r\n                                <div\r\n                                key={index} \r\n                                className={`avatar ${selectedAvatar === index ?\"selected\":\"\"}`}>\r\n                                    <img src={`data:image/svg+xml;base64,${avatar}`} alt=\"avatar\" \r\n                                    onClick={()=>setSelectedAvatar(index)}/>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <button className='submit-btn' onClick={setProfilePicture}>Set as Profile Picture</button>\r\n            </Container>\r\n            )\r\n        }\r\n        \r\n        <ToastContainer/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    flex-direction:column;\r\n    gap:3rem;\r\n    background-color:#131324;\r\n    height: 100vh;\r\n    width:100vw;\r\n    .loading-text {\r\n        color: white;\r\n    }\r\n    .loader {\r\n        max-inline-size: 100%;\r\n    }\r\n\r\n    .title-container{\r\n        h1{\r\n            color: white;\r\n        }\r\n    }\r\n\r\n    .avatars{\r\n        display: flex;\r\n        gap: 2rem;\r\n        .avatar{\r\n            border: 0.4rem solid transparent;\r\n            padding: 0.4rem;\r\n            border-radius: 5rem;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            transition: 0.2s ease-in-out ;\r\n            img{\r\n                height: 6rem;\r\n                cursor: pointer;\r\n            }\r\n            \r\n        }\r\n        .selected{\r\n            border: 0.4rem solid #4e0eff;\r\n        }\r\n    }\r\n    .submit-btn {\r\n        background-color: #4e0eff;\r\n        color: white;\r\n        padding: 1rem 2rem;\r\n        border: none;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n        border-radius: 0.4rem;\r\n        font-size: 1rem;\r\n        text-transform: uppercase;\r\n        &:hover {\r\n          background-color: #997af0;\r\n        }\r\n      }\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}